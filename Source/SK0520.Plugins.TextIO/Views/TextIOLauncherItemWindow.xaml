<Window 
	x:Class="SK0520.Plugins.TextIO.Views.TextIOLauncherItemWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:system="clr-namespace:System;assembly=mscorlib"

	xmlns:views_conveter="clr-namespace:SK0520.Plugins.TextIO.Views.Converter"

	Title="SK0520.Plugins.TextIO" 
	Height="460" 
	Width="800"
	WindowStartupLocation="CenterScreen"
	ResizeMode="CanResizeWithGrip"
	Topmost="{Binding IsChecked, ElementName=IsTopmost}"
	
	xmlns:viewmodels="clr-namespace:SK0520.Plugins.TextIO.ViewModels"
	
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:datacontext="clr-namespace:SK0520.Plugins.TextIO.ViewModels" d:DataContext="{d:DesignInstance Type=datacontext:TextIOLauncherItemViewModel}"
>
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Pe.Bridge;Component/Views/Resources/Image.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<system:Double x:Key="GridSplitter">3</system:Double>
			<Thickness x:Key="CommonThickness">3</Thickness>
			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<views_conveter:RadioButtonNegativeConverter x:Key="RadioButtonNegativeConverter" />
			<Style x:Key="ToolbarTitle" TargetType="Label">
				<Setter Property="FontWeight" Value="Bold" />
			</Style>
			<Style x:Key="ToolbarLabelButton" TargetType="StackPanel">
				<Style.Resources>
					<Style TargetType="Control">
						<Style.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.8" />
							</Trigger>
						</Style.Triggers>
					</Style>
					<Style TargetType="Label">
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="2" />
					</Style>
				</Style.Resources>
				<Setter Property="Orientation" Value="Horizontal" />
			</Style>
			<Style x:Key="Editor" TargetType="TextBox">
				<Style.Triggers>
					<Trigger Property="IsReadOnly" Value="True">
						<Setter Property="UndoLimit" Value="0" />
					</Trigger>
				</Style.Triggers>
				<Setter Property="Margin" Value="{StaticResource CommonThickness}" />
				<Setter Property="AcceptsReturn" Value="True" />
				<Setter Property="AcceptsTab" Value="True" />
				<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
			</Style>
		</ResourceDictionary>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="35*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="30*" MinWidth="120" MaxWidth="300" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="35*" />
			</Grid.ColumnDefinitions>

			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<ToolBar Grid.Row="0">
					<Label Style="{StaticResource ToolbarTitle}">入力</Label>
					<Button Command="{Binding InputAllPasteCommand}">
						<StackPanel Style="{StaticResource ToolbarLabelButton}">
							<Control Template="{StaticResource App-Image-Clipboard-Paste}" />
							<Label Content="全て貼り付け" />
						</StackPanel>
					</Button>
					<Label Style="{StaticResource ToolbarTitle}">エディタ</Label>
					<Button Command="ApplicationCommands.Copy" ToolTip="コピー">
						<Control Template="{StaticResource App-Image-Clipboard-Copy}" />
					</Button>
					<Button Command="ApplicationCommands.Paste" ToolTip="貼り付け">
						<Control Template="{StaticResource App-Image-Clipboard-Paste}" />
					</Button>
				</ToolBar>

				<TextBox 
					Grid.Row="1" 
					Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}"
				>
					<TextBox.Style>
						<Style TargetType="TextBox" BasedOn="{StaticResource Editor}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsChecked, ElementName=IsInputBreak}" Value="True">
									<Setter Property="TextWrapping" Value="Wrap" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="TextWrapping" Value="NoWrap" />
						</Style>
					</TextBox.Style>
				</TextBox>
			</Grid>

			<GridSplitter Grid.Column="1" Width="{StaticResource GridSplitter}" />

			<Grid Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<ToolBar Grid.Row="0">
					<Label Style="{StaticResource ToolbarTitle}">ソース</Label>
					<Button Command="{Binding AddScriptCommand}">
						<StackPanel Style="{StaticResource ToolbarLabelButton}">
							<Control Template="{StaticResource App-Image-Add}" />
							<Label Content="追加" />
						</StackPanel>
					</Button>
					<Button Command="{Binding UpdateScriptCommand}" CommandParameter="{Binding SelectedScriptHead}">
						<StackPanel Style="{StaticResource ToolbarLabelButton}">
							<Control Template="{StaticResource App-Image-Refresh}" />
							<Label Content="更新" />
						</StackPanel>
					</Button>
					<Separator />
					<Button Command="{Binding MoveUpScriptCommand}" CommandParameter="{Binding SelectedScriptHead}" ToolTip="上へ移動">
						<Control Template="{StaticResource App-Image-Up}" />
					</Button>
					<Button Command="{Binding MoveDownScriptCommand}" CommandParameter="{Binding SelectedScriptHead}" ToolTip="下へ移動">
						<Control Template="{StaticResource App-Image-Down}" />
					</Button>
					<Separator />
					<Button Command="{Binding RemoveScriptCommand}" CommandParameter="{Binding SelectedScriptHead}" ToolTip="削除">
						<Control Template="{StaticResource App-Image-Remove}" />
					</Button>
				</ToolBar>

				<Grid Grid.Row="1">
					<Grid.RowDefinitions>
						<RowDefinition Height="6*" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="4*" />
					</Grid.RowDefinitions>

					<ListBox 
						Grid.Row="0" 
						Margin="{StaticResource CommonThickness}" 
						ItemsSource="{Binding ScriptHeadCollection}"
						SelectedItem="{Binding SelectedScriptHead}"
					>
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" />
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

					<GridSplitter Grid.Row="1" Height="{StaticResource GridSplitter}"/>

					<GroupBox
						Grid.Row="2"
						Margin="{StaticResource CommonThickness}"
						Header="パラメータ一覧"
					>
						<GroupBox.Resources>
							<DataTemplate DataType="{x:Type viewmodels:BooleanScriptParameterViewModel}">
								<StackPanel>
									<Label Content="{Binding Display}" ToolTip="{Binding Name}" />
									<WrapPanel Orientation="Horizontal">
										<RadioButton IsChecked="{Binding Value, Converter={StaticResource RadioButtonNegativeConverter}}">OFF</RadioButton>
										<RadioButton IsChecked="{Binding Value}">ON</RadioButton>
									</WrapPanel>
								</StackPanel>
							</DataTemplate>
							<DataTemplate DataType="{x:Type viewmodels:StringScriptParameterViewModel}">
								<StackPanel>
									<Label Content="{Binding Display}" ToolTip="{Binding Name}" />
									<TextBox Text="{Binding Value}" />
								</StackPanel>
							</DataTemplate>
							<DataTemplate DataType="{x:Type viewmodels:IntegerScriptParameterViewModel}">
								<StackPanel>
									<Label Content="{Binding Display}" ToolTip="{Binding Name}" />
									<TextBox Text="{Binding Value}" />
								</StackPanel>
							</DataTemplate>
							<DataTemplate DataType="{x:Type viewmodels:DecimalScriptParameterViewModel}">
								<StackPanel>
									<Label Content="{Binding Display}" ToolTip="{Binding Name}" />
									<TextBox Text="{Binding Value}" />
								</StackPanel>
							</DataTemplate>
							<DataTemplate DataType="{x:Type viewmodels:DateTimeScriptParameterViewModel}">
								<StackPanel>
									<Label Content="{Binding Display}" ToolTip="{Binding Name}" />
									<DatePicker SelectedDate="{Binding Value}" />
								</StackPanel>
							</DataTemplate>
						</GroupBox.Resources>
						<GroupBox.Style>
							<Style TargetType="GroupBox">
								<Style.Triggers>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding IsSelectedScriptHead}" Value="True" />
											<Condition Binding="{Binding SelectedScriptHead.HasParameters}" Value="True" />
										</MultiDataTrigger.Conditions>
										<Setter Property="Content">
											<Setter.Value>
												<ItemsControl ItemsSource="{Binding SelectedScriptHead.ParameterCollection}">
													<ItemsControl.Template>
														<ControlTemplate>
															<ScrollViewer>
																<ItemsPresenter />
															</ScrollViewer>
														</ControlTemplate>
													</ItemsControl.Template>
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
												</ItemsControl>
											</Setter.Value>
										</Setter>
									</MultiDataTrigger>
								</Style.Triggers>
								<Setter Property="Content">
									<Setter.Value>
										<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">パラメータなし</TextBlock>
									</Setter.Value>
								</Setter>
							</Style>
						</GroupBox.Style>
					</GroupBox>

				</Grid>

				<Grid Grid.Row="2">
					<Grid.Resources>
						<Style TargetType="Button">
							<Style.Triggers>
								<DataTrigger Binding="{Binding SelectedScriptHead}" Value="{x:Null}">
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="Margin" Value="{StaticResource CommonThickness}" />
							<Setter Property="Padding" Value="{StaticResource CommonThickness}" />
							<Setter Property="IsEnabled" Value="True" />
						</Style>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="6*" />
						<ColumnDefinition Width="4*" />
					</Grid.ColumnDefinitions>
					<Button
						Grid.Column="0"
						FontWeight="Bold"
						Command="{Binding ExecuteCommand}"
					>
						<StackPanel Orientation="Horizontal">
							<Control Template="{StaticResource App-Image-Execute}" />
							<TextBlock Text="処理実行" />
						</StackPanel>
					</Button>
					<Button
						Grid.Column="1"
						Command="{Binding ShowPropertyCommand}"
					>
						プロパティ
					</Button>
				</Grid>
			</Grid>

			<GridSplitter Grid.Column="3" Width="{StaticResource GridSplitter}" />

			<Grid Grid.Column="4">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<ToolBar Grid.Row="0">
					<Label Style="{StaticResource ToolbarTitle}">出力</Label>
					<Button Command="{Binding OutputAllCopyCommand}">
						<StackPanel Style="{StaticResource ToolbarLabelButton}">
							<Control Template="{StaticResource App-Image-Clipboard-Paste}" />
							<Label Content="全てコピー" />
						</StackPanel>
					</Button>
					<Label Style="{StaticResource ToolbarTitle}">エディタ</Label>
					<Button Command="ApplicationCommands.Copy" ToolTip="コピー" >
						<Control Template="{StaticResource App-Image-Clipboard-Paste}" />
					</Button>
				</ToolBar>

				<TextBox 
					Grid.Row="3"
					IsReadOnly="True"
					Text="{Binding OutputValue, Mode=OneWay}"
				>
					<TextBox.Style>
						<Style TargetType="TextBox" BasedOn="{StaticResource Editor}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding OutputIsError}" Value="True">
									<Setter Property="Background" Value="LightPink" />
								</DataTrigger>
								<DataTrigger Binding="{Binding IsChecked, ElementName=IsOutputBreak}" Value="True">
									<Setter Property="TextWrapping" Value="Wrap" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="TextWrapping" Value="NoWrap" />
						</Style>
					</TextBox.Style>
				</TextBox>
			</Grid>
		</Grid>

		<StatusBar Grid.Row="1">
			<CheckBox x:Name="IsTopmost">最前面表示</CheckBox>
			<CheckBox x:Name="IsInputBreak">[入力] 右端で折り返す</CheckBox>
			<CheckBox x:Name="IsOutputBreak">[出力] 右端で折り返す</CheckBox>
		</StatusBar>

		<Grid
			Grid.Row="0"
			Grid.RowSpan="2"
			Background="#cccccccc"
		>
			<Grid.Style>
				<Style TargetType="Grid">
					<Style.Triggers>
						<DataTrigger Binding="{Binding ScriptProperty}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
					<Setter Property="Visibility" Value="Visible" />
				</Style>
			</Grid.Style>
			<Grid.Resources>
				<GridLength x:Key="PaddingSize">30</GridLength>
				<Style x:Key="InvisibleButton" TargetType="Button">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate>
								<Border Background="Transparent" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Focusable" Value="False" />
					<Setter Property="IsTabStop" Value="False" />
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Command" Value="{Binding HidePropertyCommand}" />
				</Style>
			</Grid.Resources>
			<Grid.RowDefinitions>
				<RowDefinition Height="{StaticResource PaddingSize}" />
				<RowDefinition />
				<RowDefinition Height="{StaticResource PaddingSize}" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PaddingSize}" />
				<ColumnDefinition />
				<ColumnDefinition Width="{StaticResource PaddingSize}" />
			</Grid.ColumnDefinitions>

			<Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource InvisibleButton}" />
			<Button Grid.Row="1" Grid.Column="0" Style="{StaticResource InvisibleButton}" />
			<Button Grid.Row="1" Grid.Column="2" Style="{StaticResource InvisibleButton}" />
			<Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource InvisibleButton}" />

			<Border
				Grid.Row="1"
				Grid.Column="1"
				Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
				Padding="10"
				CornerRadius="5"
			>
				<Border.Effect>
					<DropShadowEffect
						BlurRadius="10"
						ShadowDepth="0"
						Direction="0"
					/>
				</Border.Effect>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<FlowDocumentScrollViewer
						Grid.Row="0"
						IsSelectionEnabled="False"
						ContextMenuService.IsEnabled="False"
					>
						<FlowDocument>
							<Table>
								<Table.Columns>
									<TableColumn Width="3*" />
									<TableColumn Width="7*" />
								</Table.Columns>
								<TableRowGroup>
									<TableRow
									FontWeight="Bold"
									Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
									Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"
								>
										<TableCell>
											<Paragraph>項目</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>値</Paragraph>
										</TableCell>
									</TableRow>

									<TableRow>
										<TableCell>
											<Paragraph>スクリプトID</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>
												<Run Text="{Binding ScriptProperty.ScriptId, Mode=OneWay}" />
											</Paragraph>
										</TableCell>
									</TableRow>
									<TableRow>
										<TableCell>
											<Paragraph>スクリプト名</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>
												<Run Text="{Binding ScriptProperty.Name, Mode=OneWay}" />
											</Paragraph>
										</TableCell>
									</TableRow>
									<TableRow>
										<TableCell>
											<Paragraph>登録日時</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>
												<Run Text="{Binding ScriptProperty.CreatedTimestamp, Mode=OneWay}" />
											</Paragraph>
										</TableCell>
									</TableRow>
									<TableRow>
										<TableCell>
											<Paragraph>アップデート日時</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>
												<Run Text="{Binding ScriptProperty.UpdatedTimestamp, Mode=OneWay}" />
											</Paragraph>
										</TableCell>
									</TableRow>
									<TableRow>
										<TableCell>
											<Paragraph>更新URI</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>
												<Hyperlink Command="{Binding OpenUpdateUriCommand}" CommandParameter="{Binding ScriptProperty}">
													<Run Text="{Binding ScriptProperty.UpdateUri, Mode=OneWay}" />
												</Hyperlink>
											</Paragraph>
										</TableCell>
									</TableRow>
									<TableRow>
										<TableCell>
											<Paragraph>ハッシュ</Paragraph>
										</TableCell>
										<TableCell>
											<Paragraph>
												<Run Text="{Binding ScriptProperty.HashKind, Mode=OneWay}" />
											</Paragraph>
											<Paragraph>
												<TextBox
												IsReadOnly="True"
												Text="{Binding ScriptProperty.HashValue, Mode=OneWay}"
											/>
											</Paragraph>
										</TableCell>
									</TableRow>
								</TableRowGroup>
							</Table>
						</FlowDocument>
					</FlowDocumentScrollViewer>
					<Button
						Grid.Row="1"
						Margin="8"
						Padding="8"
						MaxWidth="300"
						Command="{Binding HidePropertyCommand}"
					>
						閉じる
					</Button>
				</Grid>
			</Border>
		</Grid>
	</Grid>
</Window>
